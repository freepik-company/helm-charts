apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "kopf.serviceAccountName" . }}
  labels:
    {{- include "kopf.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "kopf.serviceAccountName" . }}
rules:

  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [kopf.dev]
    resources: [clusterkopfpeerings]
    verbs: [list, watch, patch, get]

  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [kopf.dev]
    resources: [kopfpeerings]
    verbs: [list, watch, patch, get]

  # Framework: posting the events about the handlers progress/errors.
  - apiGroups: [""]
    resources: [events]
    verbs: [create]

  # Framework: runtime observation of namespaces & CRDs (addition/deletion).
  - apiGroups: [apiextensions.k8s.io]
    resources: [customresourcedefinitions]
    verbs: [list, watch]
  - apiGroups: [""]
    resources: [namespaces]
    verbs: [list, watch]

  # Framework: admission webhook configuration management.
  - apiGroups: [admissionregistration.k8s.io/v1, admissionregistration.k8s.io/v1beta1]
    resources: [validatingwebhookconfigurations, mutatingwebhookconfigurations]
    verbs: [create, patch]

  # Application: access for watching and pathcing cluster-wide.
  - apiGroups: [kopf.dev]
    {{- with .Values.kopfCRDs }}
    resources:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    verbs: [list, watch, patch]

  # Application: other resources it produces and manipulates.
  - apiGroups: [""]
    {{- with .Values.resourcesManipulation }}
    resources:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.resourcesVerbs }}
    verbs:
      {{- toYaml . | nindent 8 }}
    {{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "kopf.serviceAccountName" . }}
rules:

  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [kopf.dev]
    resources: [kopfpeerings]
    verbs: [list, watch, patch, get]

  # Framework: posting the events about the handlers progress/errors.
  - apiGroups: [""]
    resources: [events]
    verbs: [create]

  # Application: watching & handling for the custom resource we declare.
  - apiGroups: [kopf.dev]
    {{- with .Values.kopfCRDs }}
    resources:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    verbs: [list, watch, patch]

  # Application: other resources it produces and manipulates.
  - apiGroups: [""]
    {{- with .Values.resourcesManipulation }}
    resources:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.resourcesVerbs }}
    verbs:
      {{- toYaml . | nindent 8 }}
    {{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "kopf.serviceAccountName" . }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "kopf.serviceAccountName" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "kopf.serviceAccountName" . }}
    namespace: "{{ .Release.Namespace }}"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "kopf.serviceAccountName" . }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "kopf.serviceAccountName" . }}
subjects:
  - kind: ServiceAccount
    name: {{ include "kopf.serviceAccountName" . }}
