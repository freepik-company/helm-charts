# -- Replace the chart name of the file Chart.yaml in the generated name release-name-chart-name
nameOverride: ""
# -- Completely replace the name of the generated name composed of release and chart name
fullnameOverride: ""

# TODO: Save in an open registry both images and set authentication false by default
# -- Docker image with all the launcher needs to run new pipelines. That is gcloud, kubectl, helm and tkn (command line application of Tekton)
tasksImage: europe-west1-docker.pkg.dev/fc-tekton/containers/gcloud-kubectl-helm-tkn@sha256:9b099394ce09adee91dc161ceafb2046f3c170e4eda304c8126df08282954567
# -- Helm Chart package of pipeline-generator stored in a container registry with OCI support
pipelineGeneratorChart: europe-west1-docker.pkg.dev/fc-tekton/charts/pipeline-generator
# -- If the package is stored in the Artifact Registry of GCP this allows us to enable the authentication with it
pipelineGeneratorGCPAuthentication: true

# -- Secret name to authenticate sendmail task.
sendmailSecret: sendmail-secret
# -- Mail sender
sendmailSender: launcher@example.com
# -- Mail subject
sendmailSubject: Pipeline of project '$(params.project)' failed!
# -- Mail body
sendmailBody: |
  $(params.author), the initial step to start the pipeline of the application
  '$(params.project)' in the repository '$(params.repository)' has failed.

  Current branch is '$(params.branch)' with commit '$(params.commit)'.

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- A .ssh directory with private key, known_hosts, config, etc. Used to authenticate
# with the git remote when performing the clone. Binding a Secret to this volume is 
# strongly recommended over other volume types. Also it can contain a .gitconfig and 
# .git-credentials file. No authentication is the default.
# Example `gitCredentials.secret.secretName: git-credentials`
gitCredentials: {}

# -- Number of days to make a shallow clone of the repository. This only clones the
# commits between the number of days ago from now to the last one.
gitCloneDaysAgo: 1

# -- Tekton workspace configuration. 
# By default no workspace is used, but if so an emptyDir type is the default. 
# More info in [Workspaces](https://tekton.dev/docs/pipelines/pipelineruns/#specifying-workspaces)
workspaceData:
  emptyDir: {}

# - Tekton listener configuration
listeners: []

# -- Node selector configuration to set the pod of the pipeline launcher instance
# [nodeSelector](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector)
nodeSelector: {}

# -- Pod tolerations to run the pipelines launcher instances
# [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/)
tolerations: []

# -- Default namespace resource to create if createNamespace variable is set to true in pipeline file
# Template variable called `${NAME}` is replaced with the name of the namespace given in the pipeline file
namespaceResource: |-
  apiVersion: v1
  kind: Namespace
  metadata:
    name: ${NAME}

# -- Default serviceAccount resource to create if createNamespace variable is set to true in pipeline file
# Template variable called `${NAME}` is replaced with the name of the namespace given in the pipeline file.
# This service account will have the name of the namespace where is going to be placed.
serviceAccountResource: |-
  apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: ${NAME}
    namespace: ${NAME}
